{"ast":null,"code":"var _jsxFileName = \"C:\\\\taff\\\\elearningUI\\\\src\\\\pages\\\\questions\\\\index.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuestionContainer = ({\n  question,\n  timeLeft,\n  onAnswerChange\n}) => {\n  _s();\n  const [answer, setAnswer] = useState('');\n  useEffect(() => {\n    // Enregistrer la réponse de l'étudiant\n    const interval = setInterval(() => {\n      axios.post('/api/save-answer', {\n        questionId: question.id,\n        answer\n      });\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [answer]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: question.texte\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AnswerInput, {\n      value: answer,\n      onChange: e => setAnswer(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Timer, {\n      timeLeft: timeLeft\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n_s(QuestionContainer, \"dOASnFDgECg0lV2u636icfza9eQ=\");\n_c = QuestionContainer;\nconst AnswerInput = ({\n  value,\n  onChange\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"text\",\n    value: value,\n    onChange: onChange\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_c2 = AnswerInput;\nconst TestProgress = ({\n  currentQuestion,\n  totalQuestions\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Question \", currentQuestion, \" sur \", totalQuestions]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_c3 = TestProgress;\nconst Timer = ({\n  timeLeft\n}) => {\n  _s2();\n  const [minutes, setMinutes] = useState(Math.floor(timeLeft / 60));\n  const [seconds, setSeconds] = useState(timeLeft % 60);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (seconds === 0) {\n        setMinutes(minutes - 1);\n        setSeconds(59);\n      } else {\n        setSeconds(seconds - 1);\n      }\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [seconds]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Temps restant: \", minutes, \":\", seconds]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n_s2(Timer, \"VHNzRi0/WY5yhkhl2qAjq5jCaZY=\");\n_c4 = Timer;\nexport default function StudentInterface() {\n  _s3();\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [timeLeft, setTimeLeft] = useState(120); // 2 minutes\n\n  useEffect(() => {\n    // Charger les questions\n    axios.get('/api/questions').then(response => {\n      setQuestions(response.data);\n    });\n  }, []);\n  const onAnswerChange = answer => {\n    // Mettre à jour la réponse de l'étudiant\n  };\n  const onNextQuestion = () => {\n    // Passer à la question suivante\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TestProgress, {\n      currentQuestion: currentQuestion + 1,\n      totalQuestions: questions.length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(QuestionContainer, {\n      question: questions[currentQuestion],\n      timeLeft: timeLeft,\n      onAnswerChange: onAnswerChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onNextQuestion,\n      children: \"Passer \\xE0 la question suivante\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n}\n_s3(StudentInterface, \"MtgYATv9iah69W+A5YNyv9pB/0M=\");\n_c5 = StudentInterface;\n;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"QuestionContainer\");\n$RefreshReg$(_c2, \"AnswerInput\");\n$RefreshReg$(_c3, \"TestProgress\");\n$RefreshReg$(_c4, \"Timer\");\n$RefreshReg$(_c5, \"StudentInterface\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","QuestionContainer","question","timeLeft","onAnswerChange","_s","answer","setAnswer","interval","setInterval","post","questionId","id","clearInterval","children","texte","fileName","_jsxFileName","lineNumber","columnNumber","AnswerInput","value","onChange","e","target","Timer","_c","type","_c2","TestProgress","currentQuestion","totalQuestions","_c3","_s2","minutes","setMinutes","Math","floor","seconds","setSeconds","_c4","StudentInterface","_s3","questions","setQuestions","setCurrentQuestion","setTimeLeft","get","then","response","data","onNextQuestion","length","onClick","_c5","$RefreshReg$"],"sources":["C:/taff/elearningUI/src/pages/questions/index.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst QuestionContainer = ({ question, timeLeft, onAnswerChange }) => {\r\n    const [answer, setAnswer] = useState('');\r\n\r\n    useEffect(() => {\r\n        // Enregistrer la réponse de l'étudiant\r\n        const interval = setInterval(() => {\r\n            axios.post('/api/save-answer', {\r\n                questionId: question.id,\r\n                answer,\r\n            });\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [answer]);\r\n\r\n    return (\r\n        <div>\r\n            <h2>{question.texte}</h2>\r\n            <AnswerInput\r\n                value={answer}\r\n                onChange={(e) => setAnswer(e.target.value)}\r\n            />\r\n            <Timer timeLeft={timeLeft} />\r\n        </div>\r\n    );\r\n};\r\n\r\nconst AnswerInput = ({ value, onChange }) => {\r\n    return (\r\n        <input\r\n            type=\"text\"\r\n            value={value}\r\n            onChange={onChange}\r\n        />\r\n    );\r\n};\r\n\r\nconst TestProgress = ({ currentQuestion, totalQuestions }) => {\r\n    return (\r\n        <div>\r\n            Question {currentQuestion} sur {totalQuestions}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Timer = ({ timeLeft }) => {\r\n    const [minutes, setMinutes] = useState(Math.floor(timeLeft / 60));\r\n    const [seconds, setSeconds] = useState(timeLeft % 60);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            if (seconds === 0) {\r\n                setMinutes(minutes - 1);\r\n                setSeconds(59);\r\n            } else {\r\n                setSeconds(seconds - 1);\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [seconds]);\r\n\r\n    return (\r\n        <div>\r\n            Temps restant: {minutes}:{seconds}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default function StudentInterface() {\r\n    const [questions, setQuestions] = useState([]);\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n    const [timeLeft, setTimeLeft] = useState(120); // 2 minutes\r\n\r\n    useEffect(() => {\r\n        // Charger les questions\r\n        axios.get('/api/questions').then((response) => {\r\n            setQuestions(response.data);\r\n        });\r\n    }, []);\r\n\r\n    const onAnswerChange = (answer) => {\r\n        // Mettre à jour la réponse de l'étudiant\r\n    };\r\n\r\n    const onNextQuestion = () => {\r\n        // Passer à la question suivante\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <TestProgress\r\n                currentQuestion={currentQuestion + 1}\r\n                totalQuestions={questions.length}\r\n            />\r\n            <QuestionContainer\r\n                question={questions[currentQuestion]}\r\n                timeLeft={timeLeft}\r\n                onAnswerChange={onAnswerChange}\r\n            />\r\n            <button onClick={onNextQuestion}>\r\n                Passer à la question suivante\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}