{"ast":null,"code":"var _jsxFileName = \"C:\\\\taff\\\\elearningUI\\\\src\\\\pages\\\\questions\\\\Timer.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n\n// const Timer = ({ timeLeft }) => {\n//     const [minutes, setMinutes] = useState(Math.floor(timeLeft / 60));\n//     const [seconds, setSeconds] = useState(timeLeft % 60);\n\n//     useEffect(() => {\n//         const interval = setInterval(() => {\n//             if (seconds > 0) {\n//                 setSeconds((prevSeconds) => prevSeconds - 1);\n//             } else if (minutes > 0) {\n//                 setMinutes((prevMinutes) => prevMinutes - 1);\n//                 setSeconds(59);\n//             } else {\n//                 // Expiré (facultatif : actions à effectuer si le temps est écoulé)\n//                 console.log(\"Temps écoulé !\");\n//             }\n//         }, 1000);\n//         return () => clearInterval(interval);\n//     }, [seconds, minutes]);\n\n//     return (\n//         <div className=\"timer\">\n//             {minutes}:{seconds < 10 ? \"0\" + seconds : seconds}\n//         </div>\n//     );\n// };\n\n// export default Timer;\n\nimport React, { useState, useEffect } from \"react\";\nimport { ProgressBar } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Timer = ({\n  timeLeft\n}) => {\n  _s();\n  const [minutes, setMinutes] = useState(Math.floor(timeLeft / 60));\n  const [seconds, setSeconds] = useState(timeLeft % 60);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (seconds === 0) {\n        setMinutes(prevMinutes => prevMinutes - 1);\n        setSeconds(59);\n      } else {\n        setSeconds(prevSeconds => prevSeconds - 1);\n      }\n      if (minutes === 0 && seconds === 0) {\n        // Gérer le temps écoulé\n        // ...\n      }\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [seconds]);\n  const progress = timeLeft / 120 * 100;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(ProgressBar, {\n      now: progress,\n      variant: \"success\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: minutes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \":\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: seconds\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), minutes === 0 && seconds === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Temps \\xE9coul\\xE9 !\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 48\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n_s(Timer, \"VHNzRi0/WY5yhkhl2qAjq5jCaZY=\");\n_c = Timer;\nexport default Timer;\nvar _c;\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["React","useState","useEffect","ProgressBar","jsxDEV","_jsxDEV","Timer","timeLeft","_s","minutes","setMinutes","Math","floor","seconds","setSeconds","interval","setInterval","prevMinutes","prevSeconds","clearInterval","progress","className","children","now","variant","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/taff/elearningUI/src/pages/questions/Timer.jsx"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n\r\n// const Timer = ({ timeLeft }) => {\r\n//     const [minutes, setMinutes] = useState(Math.floor(timeLeft / 60));\r\n//     const [seconds, setSeconds] = useState(timeLeft % 60);\r\n\r\n//     useEffect(() => {\r\n//         const interval = setInterval(() => {\r\n//             if (seconds > 0) {\r\n//                 setSeconds((prevSeconds) => prevSeconds - 1);\r\n//             } else if (minutes > 0) {\r\n//                 setMinutes((prevMinutes) => prevMinutes - 1);\r\n//                 setSeconds(59);\r\n//             } else {\r\n//                 // Expiré (facultatif : actions à effectuer si le temps est écoulé)\r\n//                 console.log(\"Temps écoulé !\");\r\n//             }\r\n//         }, 1000);\r\n//         return () => clearInterval(interval);\r\n//     }, [seconds, minutes]);\r\n\r\n//     return (\r\n//         <div className=\"timer\">\r\n//             {minutes}:{seconds < 10 ? \"0\" + seconds : seconds}\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default Timer;\r\n\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { ProgressBar } from \"react-bootstrap\";\r\n\r\nconst Timer = ({ timeLeft }) => {\r\n    const [minutes, setMinutes] = useState(Math.floor(timeLeft / 60));\r\n    const [seconds, setSeconds] = useState(timeLeft % 60);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            if (seconds === 0) {\r\n                setMinutes((prevMinutes) => prevMinutes - 1);\r\n                setSeconds(59);\r\n            } else {\r\n                setSeconds((prevSeconds) => prevSeconds - 1);\r\n            }\r\n\r\n            if (minutes === 0 && seconds === 0) {\r\n                // Gérer le temps écoulé\r\n                // ...\r\n            }\r\n        }, 1000);\r\n        return () => clearInterval(interval);\r\n    }, [seconds]);\r\n\r\n    const progress = (timeLeft / 120) * 100;\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <ProgressBar now={progress} variant=\"success\" />\r\n            <span>{minutes}</span>\r\n            <span>:</span>\r\n            <span>{seconds}</span>\r\n            {minutes === 0 && seconds === 0 && <p>Temps écoulé !</p>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Timer;\r\n"],"mappings":";;AAAA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,KAAK,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAACU,IAAI,CAACC,KAAK,CAACL,QAAQ,GAAG,EAAE,CAAC,CAAC;EACjE,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAACM,QAAQ,GAAG,EAAE,CAAC;EAErDL,SAAS,CAAC,MAAM;IACZ,MAAMa,QAAQ,GAAGC,WAAW,CAAC,MAAM;MAC/B,IAAIH,OAAO,KAAK,CAAC,EAAE;QACfH,UAAU,CAAEO,WAAW,IAAKA,WAAW,GAAG,CAAC,CAAC;QAC5CH,UAAU,CAAC,EAAE,CAAC;MAClB,CAAC,MAAM;QACHA,UAAU,CAAEI,WAAW,IAAKA,WAAW,GAAG,CAAC,CAAC;MAChD;MAEA,IAAIT,OAAO,KAAK,CAAC,IAAII,OAAO,KAAK,CAAC,EAAE;QAChC;QACA;MAAA;IAER,CAAC,EAAE,IAAI,CAAC;IACR,OAAO,MAAMM,aAAa,CAACJ,QAAQ,CAAC;EACxC,CAAC,EAAE,CAACF,OAAO,CAAC,CAAC;EAEb,MAAMO,QAAQ,GAAIb,QAAQ,GAAG,GAAG,GAAI,GAAG;EAEvC,oBACIF,OAAA;IAAKgB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACtBjB,OAAA,CAACF,WAAW;MAACoB,GAAG,EAAEH,QAAS;MAACI,OAAO,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChDvB,OAAA;MAAAiB,QAAA,EAAOb;IAAO;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACtBvB,OAAA;MAAAiB,QAAA,EAAM;IAAC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACdvB,OAAA;MAAAiB,QAAA,EAAOT;IAAO;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,EACrBnB,OAAO,KAAK,CAAC,IAAII,OAAO,KAAK,CAAC,iBAAIR,OAAA;MAAAiB,QAAA,EAAG;IAAc;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvD,CAAC;AAEd,CAAC;AAACpB,EAAA,CAhCIF,KAAK;AAAAuB,EAAA,GAALvB,KAAK;AAkCX,eAAeA,KAAK;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}