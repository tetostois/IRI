{"ast":null,"code":"var _jsxFileName = \"C:\\\\taff\\\\elearningUI\\\\src\\\\pages\\\\questions\\\\index.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// import React from 'react'\n// import Header from '../../composants/Header'\n// import HeaderContent from '../../composants/HeaderContent'\n// import Footer from '../../composants/Footer'\n// import './QuestionCSS.css';\n\n// const QuestionReponseChrono = () => {\n//     return (\n//         <>\n//             <Header />\n//             <HeaderContent />\n//             <div className='containeur'>\n//                 <h1 className='containeur'>TEST D'EVALUATION DES LEADERS</h1>\n//             </div>\n\n//             <Footer />\n//         </>\n//     )\n// }\n\n// export default QuestionReponseChrono\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport moment from 'moment';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n  width: 100vw;\n`;\n_c = Container;\nconst QuestionContainer = styled.div`\n  border: 1px solid #ddd;\n  padding: 20px;\n  width: 80%;\n  max-width: 600px;\n`;\n_c2 = QuestionContainer;\nconst QuestionText = styled.p`\n  font-size: 18px;\n  font-weight: bold;\n`;\n_c3 = QuestionText;\nconst AnswerChoices = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\n_c4 = AnswerChoices;\nconst AnswerChoice = styled.label`\n  margin: 10px;\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #f5f5f5;\n  }\n`;\n_c5 = AnswerChoice;\nconst InputAnswer = styled.input`\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n  width: 100%;\n`;\n_c6 = InputAnswer;\nconst TextAreaAnswer = styled.textarea`\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n  width: 100%;\n  height: 100px;\n`;\n_c7 = TextAreaAnswer;\nconst Chronometer = styled.div`\n  margin: 10px;\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n  font-size: 18px;\n  font-weight: bold;\n`;\n_c8 = Chronometer;\nconst Button = styled.button`\n  margin: 10px;\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #f5f5f5;\n  }\n`;\n_c9 = Button;\nconst Question = ({\n  question,\n  answer,\n  onAnswerChange\n}) => {\n  switch (question.type) {\n    case 'choix_multiples':\n      return /*#__PURE__*/_jsxDEV(QuestionContainer, {\n        children: [/*#__PURE__*/_jsxDEV(QuestionText, {\n          children: question.texte\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(AnswerChoices, {\n          children: question.choix.map(choix => /*#__PURE__*/_jsxDEV(AnswerChoice, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"question-{question.id}\",\n              value: choix.valeur,\n              checked: answer === choix.valeur,\n              onChange: e => onAnswerChange(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 33\n            }, this), choix.texte]\n          }, choix.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this);\n    case 'reponse_courte':\n      return /*#__PURE__*/_jsxDEV(QuestionContainer, {\n        children: [/*#__PURE__*/_jsxDEV(QuestionText, {\n          children: question.texte\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(InputAnswer, {\n          type: \"text\",\n          value: answer,\n          onChange: e => onAnswerChange(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this);\n    case 'developpement':\n      return /*#__PURE__*/_jsxDEV(QuestionContainer, {\n        children: [/*#__PURE__*/_jsxDEV(QuestionText, {\n          children: question.texte\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextAreaAnswer, {\n          value: answer,\n          onChange: e => onAnswerChange(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this);\n    default:\n      return null;\n  }\n};\n_c10 = Question;\nconst ChronometerQuestion = ({\n  timeLeft,\n  onTimeExpired\n}) => {\n  _s();\n  const [intervalId, setIntervalId] = useState(120);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setTimeLeft(prevTimeLeft => prevTimeLeft - 1);\n      if (timeLeft === 0) {\n        clearInterval(interval);\n        onTimeExpired();\n      }\n    }, 1000);\n    setIntervalId(interval);\n    return () => clearInterval(interval);\n  }, [timeLeft, onTimeExpired]);\n  return /*#__PURE__*/_jsxDEV(Chronometer, {\n    children: [\"Temps restant : \", timeLeft, \" secondes\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 9\n  }, this);\n};\n_s(ChronometerQuestion, \"VCemrZwIvOD+lX5eM1QVBvv0+Mw=\");\n_c11 = ChronometerQuestion;\nconst Test = ({\n  questions\n}) => {\n  _s2();\n  const [answers, setAnswers] = useState([]);\n  const [timeLeft, setTimeLeft] = useState(120); // 2 minutes\n\n  useEffect(() => {\n    // Sauvegarde automatique des réponses\n    const interval = setInterval(() => {\n      localStorage.setItem('answers', JSON.stringify(answers));\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [answers]);\n  useEffect(() => {\n    // Chargement des réponses sauvegardées\n    const savedAnswers = localStorage.getItem('answers');\n    if (savedAnswers) {\n      setAnswers(JSON.parse(savedAnswers));\n    }\n  }, []);\n  const handleSubmit = () => {\n    // Envoi des réponses à l'API backend\n    axios.post('/api/submit-test', {\n      answers\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }, this), questions.map(question => /*#__PURE__*/_jsxDEV(Question, {\n      question: question,\n      answer: answers[question.id],\n      onAnswerChange: answer => {\n        setAnswers({\n          ...answers,\n          [question.id]: answer\n        });\n      }\n    }, question.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(Chronometer, {\n      timeLeft: timeLeft,\n      onTimeExpired: () => {\n        // Blocage de la question et passage à la suivante\n        setTimeLeft(0);\n        // ... code pour passer à la question suivante\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleSubmit,\n      children: \"Soumettre le test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 202,\n    columnNumber: 9\n  }, this);\n};\n_s2(Test, \"PA9e+cNgq4gYuWW2BjxpHY4A+wE=\");\n_c12 = Test;\nexport default Test;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"QuestionContainer\");\n$RefreshReg$(_c3, \"QuestionText\");\n$RefreshReg$(_c4, \"AnswerChoices\");\n$RefreshReg$(_c5, \"AnswerChoice\");\n$RefreshReg$(_c6, \"InputAnswer\");\n$RefreshReg$(_c7, \"TextAreaAnswer\");\n$RefreshReg$(_c8, \"Chronometer\");\n$RefreshReg$(_c9, \"Button\");\n$RefreshReg$(_c10, \"Question\");\n$RefreshReg$(_c11, \"ChronometerQuestion\");\n$RefreshReg$(_c12, \"Test\");","map":{"version":3,"names":["React","useState","useEffect","axios","moment","styled","jsxDEV","_jsxDEV","Container","div","_c","QuestionContainer","_c2","QuestionText","p","_c3","AnswerChoices","_c4","AnswerChoice","label","_c5","InputAnswer","input","_c6","TextAreaAnswer","textarea","_c7","Chronometer","_c8","Button","button","_c9","Question","question","answer","onAnswerChange","type","children","texte","fileName","_jsxFileName","lineNumber","columnNumber","choix","map","name","value","valeur","checked","onChange","e","target","id","_c10","ChronometerQuestion","timeLeft","onTimeExpired","_s","intervalId","setIntervalId","interval","setInterval","setTimeLeft","prevTimeLeft","clearInterval","_c11","Test","questions","_s2","answers","setAnswers","localStorage","setItem","JSON","stringify","savedAnswers","getItem","parse","handleSubmit","post","onClick","_c12","$RefreshReg$"],"sources":["C:/taff/elearningUI/src/pages/questions/index.jsx"],"sourcesContent":["// import React from 'react'\r\n// import Header from '../../composants/Header'\r\n// import HeaderContent from '../../composants/HeaderContent'\r\n// import Footer from '../../composants/Footer'\r\n// import './QuestionCSS.css';\r\n\r\n// const QuestionReponseChrono = () => {\r\n//     return (\r\n//         <>\r\n//             <Header />\r\n//             <HeaderContent />\r\n//             <div className='containeur'>\r\n//                 <h1 className='containeur'>TEST D'EVALUATION DES LEADERS</h1>\r\n//             </div>\r\n\r\n//             <Footer />\r\n//         </>\r\n//     )\r\n// }\r\n\r\n// export default QuestionReponseChrono\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 100vh;\r\n  width: 100vw;\r\n`;\r\n\r\nconst QuestionContainer = styled.div`\r\n  border: 1px solid #ddd;\r\n  padding: 20px;\r\n  width: 80%;\r\n  max-width: 600px;\r\n`;\r\n\r\nconst QuestionText = styled.p`\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst AnswerChoices = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst AnswerChoice = styled.label`\r\n  margin: 10px;\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: #f5f5f5;\r\n  }\r\n`;\r\n\r\nconst InputAnswer = styled.input`\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n  width: 100%;\r\n`;\r\n\r\nconst TextAreaAnswer = styled.textarea`\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n  width: 100%;\r\n  height: 100px;\r\n`;\r\n\r\nconst Chronometer = styled.div`\r\n  margin: 10px;\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  margin: 10px;\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: #f5f5f5;\r\n  }\r\n`;\r\n\r\nconst Question = ({ question, answer, onAnswerChange }) => {\r\n    switch (question.type) {\r\n        case 'choix_multiples':\r\n            return (\r\n                <QuestionContainer>\r\n                    <QuestionText>{question.texte}</QuestionText>\r\n                    <AnswerChoices>\r\n                        {question.choix.map((choix) => (\r\n                            <AnswerChoice key={choix.id}>\r\n                                <input\r\n                                    type=\"radio\"\r\n                                    name=\"question-{question.id}\"\r\n                                    value={choix.valeur}\r\n                                    checked={answer === choix.valeur}\r\n                                    onChange={(e) => onAnswerChange(e.target.value)}\r\n                                />\r\n                                {choix.texte}\r\n                            </AnswerChoice>\r\n                        ))}\r\n                    </AnswerChoices>\r\n                </QuestionContainer>\r\n            );\r\n        case 'reponse_courte':\r\n            return (\r\n                <QuestionContainer>\r\n                    <QuestionText>{question.texte}</QuestionText>\r\n                    <InputAnswer\r\n                        type=\"text\"\r\n                        value={answer}\r\n                        onChange={(e) => onAnswerChange(e.target.value)}\r\n                    />\r\n                </QuestionContainer>\r\n            );\r\n        case 'developpement':\r\n            return (\r\n                <QuestionContainer>\r\n                    <QuestionText>{question.texte}</QuestionText>\r\n                    <TextAreaAnswer\r\n                        value={answer}\r\n                        onChange={(e) => onAnswerChange(e.target.value)}\r\n                    />\r\n                </QuestionContainer>\r\n            );\r\n        default:\r\n            return null;\r\n    }\r\n};\r\n\r\nconst ChronometerQuestion = ({ timeLeft, onTimeExpired }) => {\r\n    const [intervalId, setIntervalId] = useState(120);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            setTimeLeft((prevTimeLeft) => prevTimeLeft - 1);\r\n            if (timeLeft === 0) {\r\n                clearInterval(interval);\r\n                onTimeExpired();\r\n            }\r\n        }, 1000);\r\n\r\n        setIntervalId(interval);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [timeLeft, onTimeExpired]);\r\n\r\n    return (\r\n        <Chronometer>\r\n            Temps restant : {timeLeft} secondes\r\n        </Chronometer>\r\n    );\r\n};\r\n\r\nconst Test = ({ questions }) => {\r\n    const [answers, setAnswers] = useState([]);\r\n    const [timeLeft, setTimeLeft] = useState(120); // 2 minutes\r\n\r\n    useEffect(() => {\r\n        // Sauvegarde automatique des réponses\r\n        const interval = setInterval(() => {\r\n            localStorage.setItem('answers', JSON.stringify(answers));\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [answers]);\r\n\r\n    useEffect(() => {\r\n        // Chargement des réponses sauvegardées\r\n        const savedAnswers = localStorage.getItem('answers');\r\n        if (savedAnswers) {\r\n            setAnswers(JSON.parse(savedAnswers));\r\n        }\r\n    }, []);\r\n\r\n    const handleSubmit = () => {\r\n        // Envoi des réponses à l'API backend\r\n        axios.post('/api/submit-test', { answers });\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            <h1>Test</h1>\r\n            {questions.map((question) => (\r\n                <Question\r\n                    key={question.id}\r\n                    question={question}\r\n                    answer={answers[question.id]}\r\n                    onAnswerChange={(answer) => {\r\n                        setAnswers({ ...answers, [question.id]: answer });\r\n                    }}\r\n                />\r\n            ))}\r\n            <Chronometer\r\n                timeLeft={timeLeft}\r\n                onTimeExpired={() => {\r\n                    // Blocage de la question et passage à la suivante\r\n                    setTimeLeft(0);\r\n                    // ... code pour passer à la question suivante\r\n                }}\r\n            />\r\n            <Button onClick={handleSubmit}>Soumettre le test</Button>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Test;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}