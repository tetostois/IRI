{"ast":null,"code":"var _jsxFileName = \"C:\\\\taff\\\\elearningUI\\\\src\\\\pages\\\\questions\\\\QuestionForm.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// import React, { useState } from \"react\";\n\n// const QuestionForm = ({ question, onSubmit }) => {\n//     const [answer, setAnswer] = useState(\"\");\n\n//     const handleSubmit = (e) => {\n//         e.preventDefault();\n//         onSubmit(answer);\n//     };\n\n//     return (\n//         <form onSubmit={handleSubmit}>\n//             {question.type === \"reponse_courte\" && (\n//                 <textarea\n//                     value={answer}\n//                     onChange={(e) => setAnswer(e.target.value)}\n//                 />\n//             )}\n//             {question.type === \"qcm\" && (\n//                 <ul>\n//                     {question.answers.map((answer) => (\n//                         <li key={answer.texte}>\n//                             <input\n//                                 type=\"radio\"\n//                                 name=\"answer\"\n//                                 value={answer.texte}\n//                                 checked={answer === answer.texte}\n//                                 onChange={(e) => setAnswer(e.target.value)}\n//                             />\n//                             {answer.texte}\n//                         </li>\n//                     ))}\n//                 </ul>\n//             )}\n//             <button type=\"submit\">Valider</button>\n//         </form>\n//     );\n// };\n\n// export default QuestionForm;\n\nconst QuestionForm = ({\n  question,\n  questionIndex,\n  remainingTime,\n  isQuestionLocked,\n  onAnswerSubmit,\n  handleStartTimer,\n  questionRef\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: question.texte\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: question.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Temps restant : \", remainingTime, \" secondes\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onAnswerSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"answer\",\n        children: \"Votre r\\xE9ponse : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"answer\",\n        name: \"answer\",\n        ref: questionRef,\n        disabled: isQuestionLocked\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isQuestionLocked,\n        onClick: () => handleStartTimer(questionIndex),\n        children: isQuestionLocked ? \"Soumis\" : \"Répondre\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_c = QuestionForm;\nexport default QuestionForm;\nvar _c;\n$RefreshReg$(_c, \"QuestionForm\");","map":{"version":3,"names":["QuestionForm","question","questionIndex","remainingTime","isQuestionLocked","onAnswerSubmit","handleStartTimer","questionRef","_jsxDEV","className","children","texte","fileName","_jsxFileName","lineNumber","columnNumber","description","onSubmit","htmlFor","id","name","ref","disabled","type","onClick","_c","$RefreshReg$"],"sources":["C:/taff/elearningUI/src/pages/questions/QuestionForm.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\r\n\r\n// const QuestionForm = ({ question, onSubmit }) => {\r\n//     const [answer, setAnswer] = useState(\"\");\r\n\r\n//     const handleSubmit = (e) => {\r\n//         e.preventDefault();\r\n//         onSubmit(answer);\r\n//     };\r\n\r\n//     return (\r\n//         <form onSubmit={handleSubmit}>\r\n//             {question.type === \"reponse_courte\" && (\r\n//                 <textarea\r\n//                     value={answer}\r\n//                     onChange={(e) => setAnswer(e.target.value)}\r\n//                 />\r\n//             )}\r\n//             {question.type === \"qcm\" && (\r\n//                 <ul>\r\n//                     {question.answers.map((answer) => (\r\n//                         <li key={answer.texte}>\r\n//                             <input\r\n//                                 type=\"radio\"\r\n//                                 name=\"answer\"\r\n//                                 value={answer.texte}\r\n//                                 checked={answer === answer.texte}\r\n//                                 onChange={(e) => setAnswer(e.target.value)}\r\n//                             />\r\n//                             {answer.texte}\r\n//                         </li>\r\n//                     ))}\r\n//                 </ul>\r\n//             )}\r\n//             <button type=\"submit\">Valider</button>\r\n//         </form>\r\n//     );\r\n// };\r\n\r\n// export default QuestionForm;\r\n\r\n\r\nconst QuestionForm = ({\r\n    question,\r\n    questionIndex,\r\n    remainingTime,\r\n    isQuestionLocked,\r\n    onAnswerSubmit,\r\n    handleStartTimer,\r\n    questionRef,\r\n}) => {\r\n\r\n    return (\r\n        <div className=\"question-container\">\r\n            <h2>{question.texte}</h2>\r\n            <p>{question.description}</p>\r\n            <p>Temps restant : {remainingTime} secondes</p>\r\n            <form onSubmit={onAnswerSubmit}>\r\n                <label htmlFor=\"answer\">Votre réponse : </label>\r\n                <textarea id=\"answer\" name=\"answer\" ref={questionRef} disabled={isQuestionLocked} />\r\n                <button type=\"submit\" disabled={isQuestionLocked} onClick={() => handleStartTimer(questionIndex)}>\r\n                    {isQuestionLocked ? \"Soumis\" : \"Répondre\"}\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default QuestionForm;\r\n"],"mappings":";;AAAA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,MAAMA,YAAY,GAAGA,CAAC;EAClBC,QAAQ;EACRC,aAAa;EACbC,aAAa;EACbC,gBAAgB;EAChBC,cAAc;EACdC,gBAAgB;EAChBC;AACJ,CAAC,KAAK;EAEF,oBACIC,OAAA;IAAKC,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBAC/BF,OAAA;MAAAE,QAAA,EAAKT,QAAQ,CAACU;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACzBP,OAAA;MAAAE,QAAA,EAAIT,QAAQ,CAACe;IAAW;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7BP,OAAA;MAAAE,QAAA,GAAG,kBAAgB,EAACP,aAAa,EAAC,WAAS;IAAA;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAC/CP,OAAA;MAAMS,QAAQ,EAAEZ,cAAe;MAAAK,QAAA,gBAC3BF,OAAA;QAAOU,OAAO,EAAC,QAAQ;QAAAR,QAAA,EAAC;MAAgB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAChDP,OAAA;QAAUW,EAAE,EAAC,QAAQ;QAACC,IAAI,EAAC,QAAQ;QAACC,GAAG,EAAEd,WAAY;QAACe,QAAQ,EAAElB;MAAiB;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACpFP,OAAA;QAAQe,IAAI,EAAC,QAAQ;QAACD,QAAQ,EAAElB,gBAAiB;QAACoB,OAAO,EAAEA,CAAA,KAAMlB,gBAAgB,CAACJ,aAAa,CAAE;QAAAQ,QAAA,EAC5FN,gBAAgB,GAAG,QAAQ,GAAG;MAAU;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd,CAAC;AAACU,EAAA,GAxBIzB,YAAY;AA0BlB,eAAeA,YAAY;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}